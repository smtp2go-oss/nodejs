{"version":3,"file":"index.js","mappings":"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","sources":["webpack://smtp2go-nodejs/webpack/universalModuleDefinition","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://smtp2go-nodejs/external commonjs \"axios\"","webpack://smtp2go-nodejs/./src/lib/client.ts","webpack://smtp2go-nodejs/./src/lib/inlineAttachment.ts","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/toConsumableArray\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/get\"","webpack://smtp2go-nodejs/./src/lib/mailService.ts","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/getPrototypeOf\"","webpack://smtp2go-nodejs/./src/lib/service.ts","webpack://smtp2go-nodejs/./src/lib/mailAttachment.ts","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/regenerator\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/inherits\"","webpack://smtp2go-nodejs/external node-commonjs \"fs\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/createClass\"","webpack://smtp2go-nodejs/external commonjs \"mime-types\"","webpack://smtp2go-nodejs/external node-commonjs \"path\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/classCallCheck\"","webpack://smtp2go-nodejs/webpack/bootstrap","webpack://smtp2go-nodejs/webpack/runtime/compat get default export","webpack://smtp2go-nodejs/webpack/runtime/define property getters","webpack://smtp2go-nodejs/webpack/runtime/hasOwnProperty shorthand","webpack://smtp2go-nodejs/webpack/runtime/make namespace object","webpack://smtp2go-nodejs/./src/lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"smtp2go-nodejs\"] = factory();\n\telse\n\t\troot[\"smtp2go-nodejs\"] = factory();\n})(global, () => {\nreturn ","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","import BuildsRequest from \"./buildsrequest\";\nimport axios from \"axios\";\nimport packageInfo from '../../package.json';\nexport default class SMTP2GOApiClient {\n  apiKey: string;\n  apiUrl = \"https://api.smtp2go.com/v3/\";\n  headers: Record<string, string> = {};\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  setApiKey(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n  setHeaders(headers: any) {\n    this.headers = headers;\n  }\n  getHeaders() {\n    const presetHeaders = {\n      \"Content-Type\": \"application/json\",\n      'X-Smtp2go-Api': 'smtp2go-nodejs',\n      'X-Smtp2go-Api-Version': packageInfo.version,\n    };\n    //combine preset headers with custom headers but don't allow custom headers to overwrite preset headers\n    return { ...this.headers, ...presetHeaders };\n  }\n\n  async consume(service: BuildsRequest): Promise<any> {\n    const body = await service.buildRequestBody();\n    body[\"api_key\"] = this.apiKey;\n    try {\n      const { data } = await axios({\n        method: service.getMethod(),\n        url: this.apiUrl + service.getEndpoint(),\n        headers: this.getHeaders(),\n        data: body,\n      });\n      return data;\n    } catch (error) {\n      return error.response;\n    }\n  }\n}\n","import MailAttachment from \"./mailAttachment\";\nexport default class InlineAttachment extends MailAttachment {\n  constructor(cid: string, filepath: string) {\n    super(filepath);\n    this.filename = cid;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/toConsumableArray\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","import MailAttachment from \"./mailAttachment\";\nimport SMTP2GOService from \"./service\";\nimport Address from \"./types/address\";\nimport { AddressCollection } from \"./types/addressCollection\";\nimport { AddressType } from \"./types/addressType\";\nimport Attachment from \"./types/attachment\";\nimport { AttachmentCollection } from \"./types/attachmentCollection\";\nimport Header from \"./types/header\";\nimport { HeaderCollection } from \"./types/headerCollection\";\n\ninterface IAddressTypes {\n  toAddress: AddressCollection;\n  ccAddress: AddressCollection;\n  bccAddress: AddressCollection;\n}\ninterface ICollections {\n  customHeaders: HeaderCollection | Array<Header>;\n  attachments: AttachmentCollection | Array<Attachment>;\n  inlines: AttachmentCollection | Array<Attachment>;\n  toAddress: AddressCollection | Array<Address>;\n  ccAddress: AddressCollection | Array<Address>;\n  bccAddress: AddressCollection | Array<Address>;\n}\ninterface IAttachmentTypes {\n  attachments: AttachmentCollection;\n  inlines: AttachmentCollection;\n}\nexport default class mailService extends SMTP2GOService {\n  htmlBody: string;\n  textBody: string;\n  fromAddress: Address;\n  toAddress: AddressCollection;\n  ccAddress: AddressCollection;\n  bccAddress: AddressCollection;\n  subjectLine: string;\n  templateId: string;\n  templateData: Map<string, string>;\n  customHeaders: HeaderCollection;\n  attachments: AttachmentCollection;\n  inlines: AttachmentCollection;\n  constructor() {\n    super(\"email/send\");\n    [\n      \"toAddress\",\n      \"ccAddress\",\n      \"bccAddress\",\n      \"customHeaders\",\n      \"attachments\",\n      \"inlines\",\n    ].forEach((item) => (this[item as keyof ICollections] = []));\n  }\n  addAddress(address: Address, type?: AddressType) {\n    switch (type) {\n      case \"cc\":\n        this.ccAddress.push(address);\n        break;\n      case \"bcc\":\n        this.bccAddress.push(address);\n        break;\n      case \"to\":\n      default:\n        this.toAddress.push(address);\n        break;\n    }\n    return this;\n  }\n  html(content: string) {\n    this.htmlBody = content;\n    return this;\n  }\n  text(content: string): this {\n    this.textBody = content;\n    return this;\n  }\n  from(from: Address): this {\n    this.fromAddress = from;\n    return this;\n  }\n  template(templateId: string, templateData: Map<string, string>): this {\n    this.templateId = templateId;\n    this.templateData = templateData;\n    return this;\n  }\n  to(toAddress: Address | AddressCollection): this {\n    this._addAddressOfType(toAddress, \"to\");\n    return this;\n  }\n  cc(toAddress: Address | AddressCollection): this {\n    this._addAddressOfType(toAddress, \"cc\");\n    return this;\n  }\n  bcc(toAddress: Address | AddressCollection): this {\n    this._addAddressOfType(toAddress, \"bcc\");\n    return this;\n  }\n  _addAddressOfType(emailAddress: Address | AddressCollection, t: AddressType) {\n    if (Array.isArray(emailAddress)) {\n      emailAddress.map((address) => this.addAddress(address, t));\n    } else {\n      this.addAddress(emailAddress, t);\n    }\n    return this;\n  }\n  headers(header: Header | HeaderCollection): this {\n    if (Array.isArray(header)) {\n      this.customHeaders.push(...header);\n    } else {\n      this.customHeaders.push(header);\n    }\n    return this;\n  }\n  subject(subject: string): this {\n    this.subjectLine = subject;\n    return this;\n  }\n  attach(attachment: Attachment | AttachmentCollection | string): this {\n    if (typeof attachment === \"string\") {\n      this.attachments.push(new MailAttachment(attachment));\n    } else if (Array.isArray(attachment)) {\n      this.attachments.push(...attachment);\n    } else {\n      this.attachments.push(attachment);\n    }\n    return this;\n  }\n  inline(cid: string, filepath: string): this {\n    const inlineAttachment = new MailAttachment(filepath);\n    inlineAttachment.filename = cid;\n    this.inlines.push(inlineAttachment);\n    return this;\n  }\n  getFormattedAddresses(type: AddressType): Array<string> {\n    return this[type + \"Address\" as keyof IAddressTypes].map(this.formatAddress);\n  }\n  formatAddress(address: Address): string {\n    return address?.name\n      ? `${address.name} <${address.email}>`.trim()\n      : `<${address.email}>`.trim();\n  }\n  async buildRequestBody(): Promise<Record<string, string | boolean>> {\n    this.requestBody = new Map();\n    this.requestBody.set(\"html_body\", this.htmlBody);\n    if (this.textBody) {\n      this.requestBody.set(\"text_body\", this.textBody || \"\");\n    }\n    if (this.toAddress.length) {\n      this.requestBody.set(\"to\", this.getFormattedAddresses(\"to\"));\n    } else {\n      throw Error('At least one \"to\" address is required.');\n    }\n    if (this.ccAddress.length) {\n      this.requestBody.set(\"cc\", this.getFormattedAddresses(\"cc\"));\n    }\n    if (this.bccAddress.length) {\n      this.requestBody.set(\"bcc\", this.getFormattedAddresses(\"bcc\"));\n    }\n\n    if (this.fromAddress?.email) {\n      this.requestBody.set(\"sender\", this.formatAddress(this.fromAddress));\n    } else {\n      throw Error(\"A from email address is required.\");\n    }\n\n    this.requestBody.set(\"subject\", this.subjectLine);\n\n    if (this.customHeaders.length) {\n      this.requestBody.set(\"custom_headers\", this.customHeaders);\n    }\n\n    if (this.templateId) {\n      this.requestBody.set(\"template_id\", this.templateId);\n    }\n    if (this.templateData?.size > 0) {\n      this.requestBody.set(\"template_data\", Object.fromEntries(this.templateData));\n    }\n\n    if (this.attachments.length || this.inlines.length) {\n      const promises: any[] = [];\n      [\"attachments\", \"inlines\"].forEach((attachmentType) => {\n        this[attachmentType as keyof IAttachmentTypes].forEach((attachment: MailAttachment) => {\n          promises.push(attachment.readFileBlob());\n        });\n      });\n      await Promise.all(promises).then(() => {\n        [\"attachments\", \"inlines\"].forEach((attachmentType) => {\n          if (this[attachmentType as keyof ICollections].length) {\n            this.requestBody.set(\n              attachmentType,\n              this[attachmentType as keyof IAttachmentTypes].map((attachment: MailAttachment) =>\n                attachment.forSend()\n              )\n            );\n          }\n        });\n      });\n    }\n    return await super.buildRequestBody();\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","import BuildsRequest from \"./buildsrequest\";\nimport { Method } from \"axios\";\nclass SMTP2GOService implements BuildsRequest {\n  method: Method;\n  endpoint: string;\n  requestBody?: Map<string, any>;\n\n  constructor(\n    endpoint: string,\n    requestBody?: Map<string, string | boolean>,\n    method?: Method\n  ) {\n    this.endpoint = endpoint;\n    this.requestBody = requestBody || new Map();\n    this.method = method || \"POST\";\n  }\n\n  getMethod(): Method {\n    return this.method;\n  }\n\n  getEndpoint(): string {\n    return this.endpoint;\n  }\n\n  async buildRequestBody(): Promise<Record<string, string | boolean>> {\n    return await Promise.resolve(Object.fromEntries(this.requestBody));\n  }\n}\nexport default SMTP2GOService;\n","import Attachment from \"./types/attachment\";\nconst fs = require(\"fs\").promises;\nconst mime = require(\"mime-types\");\nconst path = require(\"path\");\nexport default class MailAttachment implements Attachment {\n  filepath: string;\n  filename: string;\n  fileblob: string;\n  mimetype: string;\n  constructor(filepath: string) {\n    this.filepath = filepath;\n    this.mimetype = mime.lookup(this.filepath);\n    this.filename = path.basename(this.filepath);\n    this.fileblob = \"\";\n  }\n  setFileBlob(blob: string): this {\n    this.fileblob = blob;\n    return this;\n  }\n  /**\n   * Get the base64 encoded file content\n   * @returns Promise<string>\n   */\n  async readFileBlob(): Promise<this> {\n    if (this.fileblob != \"\") {\n      return this;\n    }\n    this.fileblob = await fs\n      .readFile(this.filepath, { encoding: \"base64\" })\n      .catch((err: any) => {\n        throw err;\n      });\n    return this;\n  }\n  forSend() {\n    return {\n      filename: this.filename,\n      fileblob: this.fileblob,\n      mimetype: this.mimetype,\n    };\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"fs\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"mime-types\");","module.exports = require(\"path\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import SMTP2GOApiClient from \"./client\";\nimport SMTP2GOService from \"./service\";\nimport MailService from \"./mailService\";\nimport MailAttachment from \"./mailAttachment\";\nimport InlineAttachment from \"./inlineAttachment\";\n\nexport { SMTP2GOApiClient as ApiClient };\nexport { SMTP2GOService as Service };\nexport { MailService, MailAttachment, InlineAttachment };\n\nexport default function SMTP2GOApi(apiKey: string) {\n  return {\n    service: function (endpoint: string) {\n      return new SMTP2GOService(endpoint);\n    },\n    mail: function () {\n      return new MailService();\n    },\n    client: function () {\n      return new SMTP2GOApiClient(apiKey);\n    },\n  };\n}\n\n\nexport * from './types/address';\nexport * from './types/addressCollection';\nexport * from './types/addressType';\nexport * from './types/attachment';\nexport * from './types/attachmentCollection';\nexport * from './types/header'; \nexport * from './types/headerCollection';\n\n\n"],"names":["root","factory","exports","module","define","amd","global","require","SMTP2GOApiClient","_createClass","apiKey","_classCallCheck","_defineProperty","this","key","value","headers","presetHeaders","packageInfo","_objectSpread","_consume","_asyncToGenerator","_regeneratorRuntime","_callee","service","body","_yield$axios","data","_context","prev","next","buildRequestBody","sent","axios","method","getMethod","url","apiUrl","getEndpoint","getHeaders","abrupt","t0","response","stop","_x","apply","arguments","InlineAttachment","_MailAttachment","cid","filepath","_this","filename","_inherits","MailAttachment","mailService","_SMTP2GOService","forEach","item","address","type","ccAddress","push","bccAddress","toAddress","content","htmlBody","textBody","from","fromAddress","templateId","templateData","_addAddressOfType","emailAddress","t","_this2","Array","isArray","map","addAddress","header","_this$customHeaders","customHeaders","_toConsumableArray","subject","subjectLine","attachment","attachments","_this$attachments","inlineAttachment","inlines","formatAddress","name","concat","email","trim","_buildRequestBody","_this$fromAddress","_this$templateData","promises","_this3","requestBody","Map","set","length","getFormattedAddresses","Error","size","Object","fromEntries","attachmentType","readFileBlob","Promise","all","then","forSend","_superPropGet","SMTP2GOService","endpoint","resolve","fs","mime","path","mimetype","lookup","basename","fileblob","blob","_readFileBlob","readFile","encoding","err","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","SMTP2GOApi","mail","MailService","client"],"sourceRoot":""}