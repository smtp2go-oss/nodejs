{"version":3,"file":"index.js","mappings":"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","sources":["webpack://smtp2go-nodejs/webpack/universalModuleDefinition","webpack://smtp2go-nodejs/external commonjs \"mime-types\"","webpack://smtp2go-nodejs/external node-commonjs \"fs\"","webpack://smtp2go-nodejs/external node-commonjs \"path\"","webpack://smtp2go-nodejs/webpack/bootstrap","webpack://smtp2go-nodejs/webpack/runtime/compat get default export","webpack://smtp2go-nodejs/webpack/runtime/define property getters","webpack://smtp2go-nodejs/webpack/runtime/hasOwnProperty shorthand","webpack://smtp2go-nodejs/webpack/runtime/make namespace object","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/classCallCheck\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/createClass\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/regenerator\"","webpack://smtp2go-nodejs/external commonjs \"axios\"","webpack://smtp2go-nodejs/./src/lib/client.ts","webpack://smtp2go-nodejs/./src/lib/service.ts","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/toConsumableArray\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/assertThisInitialized\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/get\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/inherits\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/getPrototypeOf\"","webpack://smtp2go-nodejs/./src/lib/mailAttachment.ts","webpack://smtp2go-nodejs/./src/lib/mailService.ts","webpack://smtp2go-nodejs/./src/lib/inlineAttachment.ts","webpack://smtp2go-nodejs/./src/lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"smtp2go-nodejs\"] = factory();\n\telse\n\t\troot[\"smtp2go-nodejs\"] = factory();\n})(global, () => {\nreturn ","module.exports = require(\"mime-types\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","import BuildsRequest from \"./buildsrequest\";\nimport axios from \"axios\";\nimport {version} from '../../package.json';\nexport default class SMTP2GOApiClient {\n  apiKey: string;\n  apiUrl = \"https://api.smtp2go.com/v3/\";\n  headers: Record<string, string> = {};\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  setApiKey(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n  setHeaders(headers: any) {\n    this.headers = headers;\n  }\n  getHeaders() {\n    const presetHeaders = {\n      \"Content-Type\": \"application/json\",\n      'X-Smtp2go-Api': 'smtp2go-nodejs',\n      'X-Smtp2go-Api-Version': version,\n    };\n    //combine preset headers with custom headers but don't allow custom headers to overwrite preset headers\n    return { ...this.headers, ...presetHeaders };\n  }\n\n  async consume(service: BuildsRequest): Promise<any> {\n    const body = await service.buildRequestBody();\n    body[\"api_key\"] = this.apiKey;\n    try {\n      const { data } = await axios({\n        method: service.getMethod(),\n        url: this.apiUrl + service.getEndpoint(),\n        headers: this.getHeaders(),\n        data: body,\n      });\n      return data;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        return error.response;\n      } else {\n        return error.response;\n      }\n    }\n  }\n}\n","import BuildsRequest from \"./buildsrequest\";\nimport { Method } from \"axios\";\nclass SMTP2GOService implements BuildsRequest {\n  method: Method;\n  endpoint: string;\n  requestBody?: Map<string, any>;\n\n  constructor(\n    endpoint: string,\n    requestBody?: Map<string, string | boolean>,\n    method?: Method\n  ) {\n    this.endpoint = endpoint;\n    this.requestBody = requestBody || new Map();\n    this.method = method || \"POST\";\n  }\n\n  getMethod(): Method {\n    return this.method;\n  }\n\n  getEndpoint(): string {\n    return this.endpoint;\n  }\n\n  async buildRequestBody(): Promise<Record<string, string | boolean>> {\n    return await Promise.resolve(Object.fromEntries(this.requestBody));\n  }\n}\nexport default SMTP2GOService;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/toConsumableArray\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","import Attachment from \"./types/attachment\";\nconst fs = require(\"fs\").promises;\nconst mime = require(\"mime-types\");\nconst path = require(\"path\");\nexport default class MailAttachment implements Attachment {\n  filepath: string;\n  filename: string;\n  fileblob: string;\n  mimetype: string;\n  constructor(filepath: string) {\n    this.filepath = filepath;\n    this.mimetype = mime.lookup(this.filepath);\n    this.filename = path.basename(this.filepath);\n    this.fileblob = \"\";\n  }\n  setFileBlob(blob: string): this {\n    this.fileblob = blob;\n    return this;\n  }\n  /**\n   * Get the base64 encoded file content\n   * @returns Promise<string>\n   */\n  async readFileBlob(): Promise<this> {\n    if (this.fileblob != \"\") {\n      return this;\n    }\n    this.fileblob = await fs\n      .readFile(this.filepath, { encoding: \"base64\" })\n      .catch((err: any) => {\n        throw err;\n      });\n    return this;\n  }\n  forSend() {\n    return {\n      filename: this.filename,\n      fileblob: this.fileblob,\n      mimetype: this.mimetype,\n    };\n  }\n}\n","import MailAttachment from \"./mailAttachment\";\nimport SMTP2GOService from \"./service\";\nimport Address from \"./types/address\";\nimport { AddressCollection } from \"./types/addressCollection\";\nimport { AddressType } from \"./types/addressType\";\nimport Attachment from \"./types/attachment\";\nimport { AttachmentCollection } from \"./types/attachmentCollection\";\nimport Header from \"./types/header\";\nimport { HeaderCollection } from \"./types/headerCollection\";\n\ninterface IAddressTypes {\n  toAddress: AddressCollection;\n  ccAddress: AddressCollection;\n  bccAddress: AddressCollection;\n}\ninterface ICollections {\n  customHeaders: HeaderCollection | Array<Header>;\n  attachments: AttachmentCollection | Array<Attachment>;\n  inlines: AttachmentCollection | Array<Attachment>;\n  toAddress: AddressCollection | Array<Address>;\n  ccAddress: AddressCollection | Array<Address>;\n  bccAddress: AddressCollection | Array<Address>;\n}\ninterface IAttachmentTypes {\n  attachments: AttachmentCollection;\n  inlines: AttachmentCollection;\n}\nexport default class mailService extends SMTP2GOService {\n  htmlBody: string;\n  textBody: string;\n  fromAddress: Address;\n  toAddress: AddressCollection;\n  ccAddress: AddressCollection;\n  bccAddress: AddressCollection;\n  subjectLine: string;\n  templateId: string;\n  templateData: Map<string, string>;\n  customHeaders: HeaderCollection;\n  attachments: AttachmentCollection;\n  inlines: AttachmentCollection;\n  constructor() {\n    super(\"email/send\");\n    [\n      \"toAddress\",\n      \"ccAddress\",\n      \"bccAddress\",\n      \"customHeaders\",\n      \"attachments\",\n      \"inlines\",\n    ].forEach((item) => (this[item as keyof ICollections] = []));\n  }\n  addAddress(address: Address, type?: AddressType) {\n    switch (type) {\n      case \"cc\":\n        this.ccAddress.push(address);\n        break;\n      case \"bcc\":\n        this.bccAddress.push(address);\n        break;\n      case \"to\":\n      default:\n        this.toAddress.push(address);\n        break;\n    }\n    return this;\n  }\n  html(content: string) {\n    this.htmlBody = content;\n    return this;\n  }\n  text(content: string): this {\n    this.textBody = content;\n    return this;\n  }\n  from(from: Address): this {\n    this.fromAddress = from;\n    return this;\n  }\n  template(templateId: string, templateData: Map<string, string>): this {\n    this.templateId = templateId;\n    this.templateData = templateData;\n    return this;\n  }\n  to(toAddress: Address | AddressCollection): this {\n    this._addAddressOfType(toAddress, \"to\");\n    return this;\n  }\n  cc(toAddress: Address | AddressCollection): this {\n    this._addAddressOfType(toAddress, \"cc\");\n    return this;\n  }\n  bcc(toAddress: Address | AddressCollection): this {\n    this._addAddressOfType(toAddress, \"bcc\");\n    return this;\n  }\n  _addAddressOfType(emailAddress: Address | AddressCollection, t: AddressType) {\n    if (Array.isArray(emailAddress)) {\n      emailAddress.map((address) => this.addAddress(address, t));\n    } else {\n      this.addAddress(emailAddress, t);\n    }\n    return this;\n  }\n  headers(header: Header | HeaderCollection): this {\n    if (Array.isArray(header)) {\n      this.customHeaders.push(...header);\n    } else {\n      this.customHeaders.push(header);\n    }\n    return this;\n  }\n  subject(subject: string): this {\n    this.subjectLine = subject;\n    return this;\n  }\n  attach(attachment: Attachment | AttachmentCollection | string): this {\n    if (typeof attachment === \"string\") {\n      this.attachments.push(new MailAttachment(attachment));\n    } else if (Array.isArray(attachment)) {\n      this.attachments.push(...attachment);\n    } else {\n      this.attachments.push(attachment);\n    }\n    return this;\n  }\n  inline(cid: string, filepath: string): this {\n    const inlineAttachment = new MailAttachment(filepath);\n    inlineAttachment.filename = cid;\n    this.inlines.push(inlineAttachment);\n    return this;\n  }\n  getFormattedAddresses(type: AddressType): Array<string> {\n    return this[type + \"Address\" as keyof IAddressTypes].map(this.formatAddress);\n  }\n  formatAddress(address: Address): string {\n    return address?.name\n      ? `${address.name} <${address.email}>`.trim()\n      : `<${address.email}>`.trim();\n  }\n  async buildRequestBody(): Promise<Record<string, string | boolean>> {\n    this.requestBody = new Map();\n    this.requestBody.set(\"html_body\", this.htmlBody);\n    if (this.textBody) {\n      this.requestBody.set(\"text_body\", this.textBody || \"\");\n    }\n    if (this.toAddress.length) {\n      this.requestBody.set(\"to\", this.getFormattedAddresses(\"to\"));\n    } else {\n      throw Error('At least one \"to\" address is required.');\n    }\n    if (this.ccAddress.length) {\n      this.requestBody.set(\"cc\", this.getFormattedAddresses(\"cc\"));\n    }\n    if (this.bccAddress.length) {\n      this.requestBody.set(\"bcc\", this.getFormattedAddresses(\"bcc\"));\n    }\n\n    if (this.fromAddress?.email) {\n      this.requestBody.set(\"sender\", this.formatAddress(this.fromAddress));\n    } else {\n      throw Error(\"A from email address is required.\");\n    }\n\n    this.requestBody.set(\"subject\", this.subjectLine);\n\n    if (this.customHeaders.length) {\n      this.requestBody.set(\"custom_headers\", this.customHeaders);\n    }\n\n    if (this.templateId) {\n      this.requestBody.set(\"template_id\", this.templateId);\n    }\n    if (this.templateData?.size > 0) {\n      this.requestBody.set(\"template_data\", Object.fromEntries(this.templateData));\n    }\n\n    if (this.attachments.length || this.inlines.length) {\n      const promises: any[] = [];\n      [\"attachments\", \"inlines\"].forEach((attachmentType) => {\n        this[attachmentType as keyof IAttachmentTypes].forEach((attachment: MailAttachment) => {\n          promises.push(attachment.readFileBlob());\n        });\n      });\n      await Promise.all(promises).then(() => {\n        [\"attachments\", \"inlines\"].forEach((attachmentType) => {\n          if (this[attachmentType as keyof ICollections].length) {\n            this.requestBody.set(\n              attachmentType,\n              this[attachmentType as keyof IAttachmentTypes].map((attachment: MailAttachment) =>\n                attachment.forSend()\n              )\n            );\n          }\n        });\n      });\n    }\n    return await super.buildRequestBody();\n  }\n}\n","import MailAttachment from \"./mailAttachment\";\nexport default class InlineAttachment extends MailAttachment {\n  constructor(cid: string, filepath: string) {\n    super(filepath);\n    this.filename = cid;\n  }\n}\n","import SMTP2GOApiClient from \"./client\";\nimport SMTP2GOService from \"./service\";\nimport MailService from \"./mailService\";\nimport MailAttachment from \"./mailAttachment\";\nimport InlineAttachment from \"./inlineAttachment\";\n\nexport { SMTP2GOApiClient as ApiClient };\nexport { SMTP2GOService as Service };\nexport { MailService, MailAttachment, InlineAttachment };\n\nexport default function SMTP2GOApi(apiKey: string) {\n  return {\n    service: function (endpoint: string) {\n      return new SMTP2GOService(endpoint);\n    },\n    mail: function () {\n      return new MailService();\n    },\n    client: function () {\n      return new SMTP2GOApiClient(apiKey);\n    },\n  };\n}\n"],"names":["root","factory","exports","module","define","amd","global","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","SMTP2GOApiClient","apiKey","_classCallCheck","_defineProperty","this","_consume","_createClass","headers","presetHeaders","version","_objectSpread","_asyncToGenerator","_regeneratorRuntime","_callee","service","body","_yield$axios","data","_context","prev","next","buildRequestBody","sent","axios","method","getMethod","url","apiUrl","getEndpoint","getHeaders","abrupt","t0","response","stop","_x","apply","arguments","SMTP2GOService","endpoint","requestBody","Map","_buildRequestBody","Promise","resolve","fromEntries","fs","mime","path","MailAttachment","filepath","mimetype","lookup","filename","basename","fileblob","_readFileBlob","blob","readFile","encoding","err","mailService","_SMTP2GOService","_inherits","_super","_createSuper","_this","_assertThisInitialized","forEach","item","address","type","ccAddress","push","bccAddress","toAddress","content","htmlBody","textBody","from","fromAddress","templateId","templateData","_addAddressOfType","emailAddress","t","_this2","Array","isArray","map","addAddress","header","_this$customHeaders","customHeaders","_toConsumableArray","subject","subjectLine","attachment","attachments","_this$attachments","cid","inlineAttachment","inlines","formatAddress","name","concat","email","trim","_this$fromAddress","_this$templateData","promises","_this3","set","length","getFormattedAddresses","Error","size","attachmentType","readFileBlob","all","then","forSend","_get","_getPrototypeOf","InlineAttachment","_MailAttachment","SMTP2GOApi","mail","MailService","client"],"sourceRoot":""}